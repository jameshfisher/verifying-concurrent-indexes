module bst.removeMax_iterative;

import bst.node;
import bst.RemoveMaxRet;

RemoveMaxRet removeMax(Node* root) {
  assert(root != null);

  auto c = root.c[1];

  if(!c) {
    RemoveMaxRet o = { max: root.value, root: root.c[0] };
    return o;
  }
  else {
    Node* g = root;
    Node* p = c;
    Node* i = c.c[1];

    while (i) {
      g = p;
      p = i;
      i = i.c[1];
    }
    assert(g);
    assert(p);
    assert(!i);
    assert(g.c[1] == p);
    assert(p.c[1] == i);

    g.c[1] = p.c[0];
    int max = p.value;
    //delete p;
    RemoveMaxRet o = { max: max, root: root };
    return o;
  }
}